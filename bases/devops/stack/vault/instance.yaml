apiVersion: vault.banzaicloud.com/v1alpha1
kind: Vault
metadata:
  name: vault-main
  namespace: devops-vault
spec:
  annotations:
    devops-vault: main
  caNamespaces:
    - '*'
  config:
    listener:
      tcp:
        address: 0.0.0.0:8200
        tls_cert_file: /vault/tls/server.crt
        tls_key_file: /vault/tls/server.key
    storage:
      file:
        path: ${ .Env.VAULT_STORAGE_FILE }
    telemetry:
      statsd_address: localhost:9125
    ui: true
  credentialsConfig:
    env: ''
    path: ''
    secretName: ''
  externalConfig:
    auth:
      - roles:
          - bound_service_account_names:
              - default
              - vault-secrets-webhook
              - vault
            bound_service_account_namespaces:
              - default
              - vswh
            name: default
            policies:
              - allow_secrets
              - allow_pki
            ttl: 1h
        type: kubernetes
    policies:
      - name: allow_secrets
        rules: >-
          path "secret/*" { capabilities = ["create", "read", "update",
          "delete", "list"] }
      - name: allow_pki
        rules: >-
          path "pki/*" { capabilities = ["create", "read", "update", "delete",
          "list"] }
    secrets:
      - description: General secrets.
        options:
          version: 2
        path: secret
        type: kv
      - config:
          default_lease_ttl: 168h
          max_lease_ttl: 720h
        configuration:
          config:
            - crl_distribution_points: https://vault.devops-vault:8200/v1/pki/crl
              issuing_certificates: https://vault.devops-vault:8200/v1/pki/ca
              name: urls
          roles:
            - allow_subdomains: true
              allowed_domains: localhost,pod,svc,devops-vault
              generate_lease: true
              name: default
              ttl: 1m
          root/generate:
            - common_name: vault.devops-vault
              name: internal
        description: Vault PKI Backend
        type: pki
  image: hashicorp/vault:1.16
  # Request an Ingress controller with the default configuration
  ingress:
    # Specify Ingress object annotations here, if TLS is enabled (which is by default)
    # the operator will add NGINX, Traefik and HAProxy Ingress compatible annotations
    # to support TLS backends
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      external-dns.alpha.kubernetes.io/hostname: vault.nuamexchange.com
    # Override the default Ingress specification here
    # This follows the same format as the standard Kubernetes Ingress
    # See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#ingressspec-v1beta1-extensions
    spec:
      ingressClassName: nginx
      rules:
      - host: vault.nuamexchange.com
        http:
          paths:
            - backend:
                service:
                  name: vault-main
                  port:
                    number: 8200
              path: /
              pathType: Prefix
      tls:
      - hosts:
        - vault.nuamexchange.com
        secretName: devops-vault-tls
  nodeAffinity: {}
#  nodeSelector:
#    devops-core: enabled
  securityContext: {}
  serviceAccount: vault
  serviceType: ClusterIP
  size: 1
  unsealConfig:
    kubernetes:
      secretNamespace: devops-vault
    options:
      preFlightChecks: true
  vaultAnnotations:
    type/instance: vault
  vaultConfigurerAnnotations:
    type/instance: vaultconfigurer
  vaultContainerSpec:
    name: ''
    resources: {}
  vaultEnvsConfig:
    - name: VAULT_LOG_LEVEL
      value: info
    - name: VAULT_STORAGE_FILE
      value: /vault/file
  volumeMounts:
    - mountPath: /vault/file
      name: vault-file
  volumes:
    - name: vault-file
      persistentVolumeClaim:
        claimName: vault-file
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vault-file
  namespace: devops-vault
spec:
  # https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class-1
  storageClassName: managed-csi
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
